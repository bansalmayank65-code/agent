# No-Git Dockerfile - Avoids Git ownership issues entirely
FROM ubuntu:22.04

# Install system dependencies
RUN apt-get update && apt-get install -y \
    openjdk-17-jdk \
    curl \
    wget \
    unzip \
    xz-utils \
    dumb-init \
    && rm -rf /var/lib/apt/lists/*

# Install Flutter without using Git
WORKDIR /opt
RUN curl -fsSL https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_3.24.3-stable.tar.xz | tar -xJ
ENV PATH="/opt/flutter/bin:$PATH"

# Configure Flutter without Git operations
ENV FLUTTER_ROOT="/opt/flutter"
ENV PUB_CACHE="/opt/flutter/.pub-cache"

# Set working directory
WORKDIR /app

# Copy entire project
COPY . .

# Set environment to avoid Git checks
ENV GIT_DISCOVERY_ACROSS_FILESYSTEM=1
ENV FLUTTER_SUPPRESS_ANALYTICS=true

# Build Flutter web without Git operations
RUN cd frontend && \
    flutter config --no-analytics --enable-web && \
    flutter pub get --offline || flutter pub get && \
    flutter build web --release --base-href="/"

# Copy Flutter build to Spring Boot static resources
RUN mkdir -p backend/src/main/resources/static && \
    cp -r frontend/build/web/* backend/src/main/resources/static/

# Build Spring Boot application
RUN cd backend && \
    chmod +x mvnw && \
    ./mvnw clean package -DskipTests

# Create non-root user
RUN addgroup --gid 1001 appuser && \
    adduser --uid 1001 --gid 1001 --disabled-password --gecos "" appuser

# Change ownership
RUN chown -R appuser:appuser /app

# Switch to non-root user
USER appuser

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:8080/actuator/health || exit 1

# Set JVM options for containerized environment
ENV JAVA_OPTS="-XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0 -XX:+UseG1GC"

# Use dumb-init to handle signals properly
ENTRYPOINT ["dumb-init", "--"]
CMD ["sh", "-c", "java $JAVA_OPTS -Dserver.port=${PORT:-8080} -jar backend/target/agenticworkstation-0.0.1-SNAPSHOT.jar"]