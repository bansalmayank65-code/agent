server:
  port: 8080

spring:
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  
  # JPA Configuration (common for all profiles)
  jpa:
    show-sql: ${JPA_SHOW_SQL:true}
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        jdbc:
          time_zone: UTC
  
  # Security Configuration
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID:YOUR_GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET:YOUR_GOOGLE_CLIENT_SECRET}
            scope: openid,profile,email
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            client-authentication-method: client_secret_basic
            authorization-grant-type: authorization_code
        provider:
          google:
            issuer-uri: https://accounts.google.com

logging:
  level:
    org.springframework.security: INFO
    com.amazon.agenticworkstation: DEBUG

# Tau Bench API Configuration
tau:
  bench:
    api:
      base-url: ${TAU_BENCH_API_URL:https://tau-bench.turing.com}
      connect-timeout: 30000
      read-timeout: 300000

---
# Development Profile Configuration
spring:
  config:
    activate:
      on-profile: dev
  
  # Database Configuration for Development
  datasource:
    url: jdbc:postgresql://ep-tiny-flower-a1bscmef-pooler.ap-southeast-1.aws.neon.tech/agentic_workstation?sslmode=require
    username: neondb_owner
    password: npg_bzfN1C9jdJtL
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 5
      minimum-idle: 1
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000
  
  # JPA Configuration for Development
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        type:
          preferred_uuid_jdbc_type: CHAR

---
# Production Profile Configuration  
spring:
  config:
    activate:
      on-profile: prod
  
  # Database Configuration for Production
  datasource:
    url: jdbc:postgresql://ep-tiny-flower-a1bscmef-pooler.ap-southeast-1.aws.neon.tech/agentic_workstation?sslmode=require
    username: neondb_owner
    password: npg_bzfN1C9jdJtL
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 2
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000
  
  # JPA Configuration for Production
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
